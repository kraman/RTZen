/*******************************************************************************
 * --------------------------------------------------------------------------
 * $Id: UserIdStrategy.java,v 1.5 2003/08/05 23:37:28 nshankar Exp $
 * --------------------------------------------------------------------------
 */

package edu.uci.ece.zen.poa.mechanism;

import org.omg.CORBA.IntHolder;

import edu.uci.ece.zen.poa.POARunnable;
import edu.uci.ece.zen.utils.FString;

public final class UserIdStrategy extends IdAssignmentStrategy {

    /**
     * Create user id strategy
     */
    public UserIdStrategy() {
    }

    /**
     * Obtain next Id -- defaults to exception being thrown.
     * 
     * @return byte[] next id
     * @throws org.omg.PortableServer.POAPackage.WrongPolicy
     */
    public void nextId(FString oid_out, IntHolder exceptionValue) {
        exceptionValue.value = POARunnable.WrongPolicyException;
        oid_out.reset();
    }

    /**
     * Checks if policy type corresonds to this strategy
     * 
     * @param policyName
     *            policy type
     * @return boolean true if yes, else false
     */
    public boolean isPresent(int policyName) {
        if (IdAssignmentStrategy.USER_ID == policyName) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * validate policy type
     * 
     * @param policy
     *            type
     * @throws org.omg.PortableServer.POAPackage.WrongPolicy
     */
    public void validate(int policy, IntHolder exceptionValue) {
        exceptionValue.value = POARunnable.NoException;
        if (!isPresent(policy)) {
            exceptionValue.value = POARunnable.WrongPolicyException;
        }
    }

    /**
     * Check if the user id was generated by this strategy -- defaults to true
     * 
     * @param id
     *            user id
     * @return boolean true always
     */
    public boolean verifyID(FString id) {
        return true;
    }

}