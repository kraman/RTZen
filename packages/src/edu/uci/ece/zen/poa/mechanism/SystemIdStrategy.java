/* --------------------------------------------------------------------------*
 * $Id: SystemIdStrategy.java,v 1.5 2003/08/05 23:37:28 nshankar Exp $
 *--------------------------------------------------------------------------*/

package edu.uci.ece.zen.poa.mechanism;


public final class SystemIdStrategy extends IdAssignmentStrategy {

    /**
     * Create System Id Strategy Strat key genration from 0
     */
    public SystemIdStrategy() {
        this.id = 0;
    }

   /**
    * Obtain new system id.
    * @return byte[]
    */
    public byte[] nextId()
        throws org.omg.PortableServer.POAPackage.WrongPolicy {

        // write the integer into a byte array!
        return writeInt(++id);
    }
    
   /**
    * Check if strategy same as this strategy
    * @param policyName policy type
    * @return boolean
    */
    public boolean isPresent(int policyName) {
        if (IdAssignmentStrategy.SYSTEM_ID == policyName) {
            return true;
        } else {
            return false;
        }
    }
    
   /**
    * validate policy type
    * @param policy policy-type
    */
    public void validate(int policy)
        throws org.omg.PortableServer.POAPackage.WrongPolicy {
        if (!isPresent(policy)) {
            throw new org.omg.PortableServer.POAPackage.WrongPolicy();
        }
    }

    /**
     * Verify if the id was generated by this strategy
     * @param id
     * @return boolean true if yes, else false
     */
   public boolean verifyID(byte[] id) {
        // The only possible way of identification is if this id
        // corresponds to an integer else it could not be generated
        // by the system
        try {
            Integer.parseInt(new String(id));
            return true;
        } catch (NumberFormatException nux) {}
        return false;
    }

    private byte[] writeInt(int value) {

        byte[] buffer = new byte[4];
        int nextFreeByte = 0;

        buffer[nextFreeByte++] = (byte) ((value >>> 24) & 0xFF);
        buffer[nextFreeByte++] = (byte) ((value >>> 16) & 0xFF);
        buffer[nextFreeByte++] = (byte) ((value >>> 8) & 0xFF);
        buffer[nextFreeByte++] = (byte) (value & 0xFF);

        return buffer;
    }

    private int id;
}
